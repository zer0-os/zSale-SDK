/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ZNSHub, ZNSHubInterface } from "../ZNSHub";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "registrar",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "label",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "labelHash",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "parent",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadataUri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    name: "EEDomainCreatedV2",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "registrar",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "EEMetadataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "registrar",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "locker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLocked",
        type: "bool",
      },
    ],
    name: "EEMetadataLockChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "parentRegistrar",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rootId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "childRegistrar",
        type: "address",
      },
    ],
    name: "EENewSubdomainRegistrar",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "registrar",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EERoyaltiesAmountChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "registrar",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "EETransferV1",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "addController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rootDomainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "registrar",
        type: "address",
      },
    ],
    name: "addRegistrar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedRegistrars",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beacon",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "controllers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultRegistrar",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "labelHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "parent",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "string",
        name: "metadataUri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    name: "domainCreated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "domainId",
        type: "uint256",
      },
    ],
    name: "domainExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domainToContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "domainTransferred",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "domainId",
        type: "uint256",
      },
    ],
    name: "getRegistrarForDomain",
    outputs: [
      {
        internalType: "contract IRegistrar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "defaultRegistrar_",
        type: "address",
      },
      {
        internalType: "address",
        name: "registrarBeacon_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "metadataChanged",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "locker",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLocked",
        type: "bool",
      },
    ],
    name: "metadataLockChanged",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "domainId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "domainId",
        type: "uint256",
      },
    ],
    name: "parentOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registrarBeacon",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "removeController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "royaltiesAmountChanged",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "subdomainRegistrars",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611639806100206000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638de2dec9116100de578063cfa3c13211610097578063e1cc849011610071578063e1cc8490146103ad578063e43ad7d5146103be578063f2fde38b146103d1578063f6a74ed7146103e457600080fd5b8063cfa3c13214610356578063da8c229e14610377578063df10cd0e1461039a57600080fd5b80638de2dec9146102a5578063a6f87ee3146102b8578063a7fc7a07146102e1578063a9c6b3fa146102f4578063b16eab6514610317578063b429afeb1461032a57600080fd5b80634b6160eb116101305780634b6160eb1461021b57806359659e901461025c5780636304aecb1461026f5780636352211e14610282578063715018a6146102955780638da5cb5b1461029d57600080fd5b806301ffc9a7146101785780630738d081146101ba578063173b61a8146101cf578063393e836e146101e25780633f7baeb9146101f5578063485cc95514610208575b600080fd5b6101a5610186366004611164565b6001600160e01b03191660009081526033602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6101cd6101c83660046111ec565b6103f7565b005b6101cd6101dd3660046112af565b6104a1565b6101cd6101f03660046112fb565b610511565b6101cd61020336600461133c565b61059d565b6101cd61021636600461136c565b61070e565b61024461022936600461139a565b609a602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101b1565b609c54610244906001600160a01b031681565b61024461027d36600461139a565b6107ce565b61024461029036600461139a565b6107ff565b6101cd610933565b6102446109ac565b6101a56102b336600461139a565b6109c5565b6102446102c636600461139a565b609b602052600090815260409020546001600160a01b031681565b6101cd6102ef3660046113b3565b610a3d565b6101a56103023660046113b3565b60976020526000908152604090205460ff1681565b609954610244906001600160a01b031681565b6101a56103383660046113b3565b6001600160a01b031660009081526098602052604090205460ff1690565b61036961036436600461139a565b610af2565b6040519081526020016101b1565b6101a56103853660046113b3565b60986020526000908152604090205460ff1681565b6101cd6103a83660046113d0565b610b6a565b609c546001600160a01b0316610244565b6101cd6103cc366004611400565b610bd7565b6101cd6103df3660046113b3565b610c51565b6101cd6103f23660046113b3565b610d41565b3360009081526097602052604090205460ff1661042f5760405162461bcd60e51b815260040161042690611442565b60405180910390fd5b85878b7f37919b9fdb64206a90fb4ae48ec1111fa99c2f3675873c534335050bd9d8c25c338d8d8b8b8b8b8b60405161046f9897969594939291906114a2565b60405180910390a450505060009687525050609a6020525050604090922080546001600160a01b031916331790555050565b3360009081526097602052604090205460ff166104d05760405162461bcd60e51b815260040161042690611442565b827f46b5f635ea2563da8822268d8558a1690da5088a058682a2507e6c39fd1a3640338484604051610504939291906114ff565b60405180910390a2505050565b3360009081526097602052604090205460ff166105405760405162461bcd60e51b815260040161042690611442565b80826001600160a01b0316846001600160a01b03167f104ce6adace18a8921a4a90cde8b3f21b4958ccf5835b5085ad6026e80dd9bcd61057d3390565b6040516001600160a01b03909116815260200160405180910390a4505050565b6105a56109ac565b6001600160a01b0316336001600160a01b031614806105d357503360009081526097602052604090205460ff165b6106155760405162461bcd60e51b81526020600482015260136024820152721491514e88139bdd08105d5d1a1bdc9a5e9959606a1b6044820152606401610426565b6001600160a01b03811660009081526097602052604090205460ff16156106775760405162461bcd60e51b815260206004820152601660248201527516920e88105b1c9958591e48149959da5cdd195c995960521b6044820152606401610426565b6001600160a01b0381166000818152609760209081526040808320805460ff19166001179055858352609b909152902080546001600160a01b03191690911790557fff2d4441c70a09ed806c7c3992c2740b9560ff95e3876fe66a3395dbef1850586106e03390565b604080516001600160a01b039283168152602081018690529184169082015260600160405180910390a15050565b600054610100900460ff16806107235750303b155b80610731575060005460ff16155b61074d5760405162461bcd60e51b81526004016104269061152d565b600054610100900460ff1615801561076f576000805461ffff19166101011790555b610777610df0565b61077f610e6e565b610787610ed7565b609980546001600160a01b038086166001600160a01b031992831617909255609c80549285169290911691909117905580156107c9576000805461ff00191690555b505050565b6000818152609a60205260408120546001600160a01b0316806107f957506099546001600160a01b03165b92915050565b60008061080b836107ce565b604051638de2dec960e01b8152600481018590529091506001600160a01b03821690638de2dec990602401602060405180830381865afa158015610853573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610877919061157b565b6108c35760405162461bcd60e51b815260206004820152601860248201527f5a483a20446f6d61696e20646f65736e277420657869737400000000000000006044820152606401610426565b6040516331a9108f60e11b8152600481018490526001600160a01b03821690636352211e90602401602060405180830381865afa158015610908573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092c9190611598565b9392505050565b3361093c6109ac565b6001600160a01b0316146109625760405162461bcd60e51b8152600401610426906115b5565b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b60006109c06065546001600160a01b031690565b905090565b6000806109d1836107ce565b604051638de2dec960e01b8152600481018590529091506001600160a01b03821690638de2dec990602401602060405180830381865afa158015610a19573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092c919061157b565b33610a466109ac565b6001600160a01b031614610a6c5760405162461bcd60e51b8152600401610426906115b5565b6001600160a01b03811660009081526098602052604090205460ff1615610ace5760405162461bcd60e51b81526020600482015260166024820152752d241d1020b63932b0b23c9031b7b73a3937b63632b960511b6044820152606401610426565b6001600160a01b03166000908152609860205260409020805460ff19166001179055565b600080610afe836107ce565b6040516367d1e09960e11b8152600481018590529091506001600160a01b0382169063cfa3c13290602401602060405180830381865afa158015610b46573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092c91906115ea565b3360009081526097602052604090205460ff16610b995760405162461bcd60e51b815260040161042690611442565b6040805133815260208101839052815184927f3c5f30a4d469e90e44e1c01f47c6be345fb987fdca8403a73416e02d40403fbc928290030190a25050565b3360009081526097602052604090205460ff16610c065760405162461bcd60e51b815260040161042690611442565b827f7688b26a49451438d86586ed3dff712630a5804aa78a2079b39fa0c45f8413bb33604080516001600160a01b039283168152918616602083015284151590820152606001610504565b33610c5a6109ac565b6001600160a01b031614610c805760405162461bcd60e51b8152600401610426906115b5565b6001600160a01b038116610ce55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610426565b6065546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b33610d4a6109ac565b6001600160a01b031614610d705760405162461bcd60e51b8152600401610426906115b5565b6001600160a01b03811660009081526098602052604090205460ff16610dcf5760405162461bcd60e51b81526020600482015260146024820152732d241d102737ba10309031b7b73a3937b63632b960611b6044820152606401610426565b6001600160a01b03166000908152609860205260409020805460ff19169055565b600054610100900460ff1680610e055750303b155b80610e13575060005460ff16155b610e2f5760405162461bcd60e51b81526004016104269061152d565b600054610100900460ff16158015610e51576000805461ffff19166101011790555b610e59610f48565b8015610e6b576000805461ff00191690555b50565b600054610100900460ff1680610e835750303b155b80610e91575060005460ff16155b610ead5760405162461bcd60e51b81526004016104269061152d565b600054610100900460ff16158015610ecf576000805461ffff19166101011790555b610e59610fb9565b600054610100900460ff1680610eec5750303b155b80610efa575060005460ff16155b610f165760405162461bcd60e51b81526004016104269061152d565b600054610100900460ff16158015610f38576000805461ffff19166101011790555b610f40610fb9565b610e5961102d565b600054610100900460ff1680610f5d5750303b155b80610f6b575060005460ff16155b610f875760405162461bcd60e51b81526004016104269061152d565b600054610100900460ff16158015610fa9576000805461ffff19166101011790555b610e596301ffc9a760e01b6110e5565b600054610100900460ff1680610fce5750303b155b80610fdc575060005460ff16155b610ff85760405162461bcd60e51b81526004016104269061152d565b600054610100900460ff16158015610e59576000805461ffff19166101011790558015610e6b576000805461ff001916905550565b600054610100900460ff16806110425750303b155b80611050575060005460ff16155b61106c5760405162461bcd60e51b81526004016104269061152d565b600054610100900460ff1615801561108e576000805461ffff19166101011790555b606580546001600160a01b0319163390811790915560405181906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610e6b576000805461ff001916905550565b6001600160e01b0319808216141561113f5760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e74657266616365206964000000006044820152606401610426565b6001600160e01b0319166000908152603360205260409020805460ff19166001179055565b60006020828403121561117657600080fd5b81356001600160e01b03198116811461092c57600080fd5b60008083601f8401126111a057600080fd5b50813567ffffffffffffffff8111156111b857600080fd5b6020830191508360208285010111156111d057600080fd5b9250929050565b6001600160a01b0381168114610e6b57600080fd5b6000806000806000806000806000806101008b8d03121561120c57600080fd5b8a35995060208b013567ffffffffffffffff8082111561122b57600080fd5b6112378e838f0161118e565b909b50995060408d0135985060608d0135975060808d0135915061125a826111d7565b90955060a08c01359061126c826111d7565b90945060c08c0135908082111561128257600080fd5b5061128f8d828e0161118e565b9150809450508092505060e08b013590509295989b9194979a5092959850565b6000806000604084860312156112c457600080fd5b83359250602084013567ffffffffffffffff8111156112e257600080fd5b6112ee8682870161118e565b9497909650939450505050565b60008060006060848603121561131057600080fd5b833561131b816111d7565b9250602084013561132b816111d7565b929592945050506040919091013590565b6000806040838503121561134f57600080fd5b823591506020830135611361816111d7565b809150509250929050565b6000806040838503121561137f57600080fd5b823561138a816111d7565b91506020830135611361816111d7565b6000602082840312156113ac57600080fd5b5035919050565b6000602082840312156113c557600080fd5b813561092c816111d7565b600080604083850312156113e357600080fd5b50508035926020909101359150565b8015158114610e6b57600080fd5b60008060006060848603121561141557600080fd5b833592506020840135611427816111d7565b91506040840135611437816113f2565b809150509250925092565b6020808252601d908201527f5245453a204e6f7420617574686f72697a656420726567697374726172000000604082015260600190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600060018060a01b03808b16835260c060208401526114c560c084018a8c611479565b8189166040850152818816606085015283810360808501526114e8818789611479565b925050508260a08301529998505050505050505050565b6001600160a01b03841681526040602082018190526000906115249083018486611479565b95945050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60006020828403121561158d57600080fd5b815161092c816113f2565b6000602082840312156115aa57600080fd5b815161092c816111d7565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156115fc57600080fd5b505191905056fea26469706673582212200db30a51f34cdffba2f144d8404cb63ce66417e03990856f02d9cfaadb0b9c0e64736f6c634300080b0033";

type ZNSHubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZNSHubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZNSHub__factory extends ContractFactory {
  constructor(...args: ZNSHubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ZNSHub";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZNSHub> {
    return super.deploy(overrides || {}) as Promise<ZNSHub>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ZNSHub {
    return super.attach(address) as ZNSHub;
  }
  connect(signer: Signer): ZNSHub__factory {
    return super.connect(signer) as ZNSHub__factory;
  }
  static readonly contractName: "ZNSHub";
  public readonly contractName: "ZNSHub";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZNSHubInterface {
    return new utils.Interface(_abi) as ZNSHubInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ZNSHub {
    return new Contract(address, _abi, signerOrProvider) as ZNSHub;
  }
}
