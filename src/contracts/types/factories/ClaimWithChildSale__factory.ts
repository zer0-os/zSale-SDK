/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ClaimWithChildSale,
  ClaimWithChildSaleInterface,
} from "../ClaimWithChildSale";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RefundedEther",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "block",
        type: "uint256",
      },
    ],
    name: "SaleStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newDomainParentId_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
      {
        internalType: "contract IZNSHub",
        name: "zNSHub_",
        type: "address",
      },
      {
        internalType: "address",
        name: "sellerWallet_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "saleDuration_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startingMetadataIndex_",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "baseFolderHash_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalForSale_",
        type: "uint256",
      },
      {
        internalType: "contract IRegistrar",
        name: "registrarOfClaimDomain_",
        type: "address",
      },
    ],
    name: "__ClaimWithChildSale_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "baseFolderHash",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "claimingIds",
        type: "uint256[]",
      },
    ],
    name: "claimDomains",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimingParentId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domainsClaimedWithBy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainsSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getNftByIndex",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newDomainParentId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registrarOfClaimDomain",
    outputs: [
      {
        internalType: "contract IRegistrar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "salePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "saleStartBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "saleStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sellerWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "forSale",
        type: "uint256",
      },
    ],
    name: "setAmountOfDomainsForSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "folderHash_",
        type: "string",
      },
    ],
    name: "setBaseFolderHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parentId",
        type: "uint256",
      },
    ],
    name: "setClaimingParentId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IZNSHub",
        name: "zNSHub_",
        type: "address",
      },
    ],
    name: "setHub",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parentId",
        type: "uint256",
      },
    ],
    name: "setNewDomainParentId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "pauseStatus",
        type: "bool",
      },
    ],
    name: "setPauseStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "durationInBlocks",
        type: "uint256",
      },
    ],
    name: "setSaleDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setSalePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "setSellerWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "setStartIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRegistrar",
        name: "registrarOfClaimDomain_",
        type: "address",
      },
    ],
    name: "setregistrarOfClaimDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startingMetadataIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stopSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalForSale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "zNSHub",
    outputs: [
      {
        internalType: "contract IZNSHub",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612380806100206000396000f3fe6080604052600436106102045760003560e01c80638da5cb5b11610118578063c38bb537116100a0578063ec443e771161006f578063ec443e771461059b578063f1b8e402146105b1578063f2279dd6146105d1578063f2fde38b146105f1578063f51f96dd1461061157610204565b8063c38bb53714610530578063c623d0f214610550578063dede997a14610566578063e36b0b371461058657610204565b8063a5060c84116100e7578063a5060c8414610499578063a5808c91146104c6578063b66a0e5d146104db578063bca26515146104f0578063c04d0d141461051057610204565b80638da5cb5b1461041a5780638eaefd3a146104385780639544e7111461044e578063a144c8341461046357610204565b80633a47040f1161019b57806362ef2af41161016a57806362ef2af41461038f578063715018a6146103a55780637e12180e146103ba5780638381a6f4146103da5780638460a5de146103fa57610204565b80633a47040f1461030b5780635c474f9e1461032b5780635c975abb146103555780635ff7d9d51461036f57610204565b806320027275116101d7578063200272751461029f57806321405ae6146102b557806331962cdc146102d55780633711d9fb146102f557610204565b806309486fd51461020957806316ecc131146102465780631919fed71461026a578063195067a41461028c575b600080fd5b34801561021557600080fd5b50606654610229906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561025257600080fd5b5061025c60705481565b60405190815260200161023d565b34801561027657600080fd5b5061028a610285366004611f2c565b610627565b005b61028a61029a366004611e5c565b6106bd565b3480156102ab57600080fd5b5061025c606e5481565b3480156102c157600080fd5b5061028a6102d0366004611eec565b6106d5565b3480156102e157600080fd5b5061028a6102f0366004611e1d565b6107ab565b34801561030157600080fd5b5061025c60725481565b34801561031757600080fd5b50606554610229906001600160a01b031681565b34801561033757600080fd5b50606d546103459060ff1681565b604051901515815260200161023d565b34801561036157600080fd5b50606f546103459060ff1681565b34801561037b57600080fd5b5061028a61038a366004611f2c565b61085e565b34801561039b57600080fd5b5061025c60675481565b3480156103b157600080fd5b5061028a6108fd565b3480156103c657600080fd5b5061028a6103d5366004611f2c565b610951565b3480156103e657600080fd5b5061028a6103f5366004611f2c565b6109e2565b34801561040657600080fd5b50606a54610229906001600160a01b031681565b34801561042657600080fd5b506033546001600160a01b0316610229565b34801561044457600080fd5b5061025c606b5481565b34801561045a57600080fd5b5061028a610a72565b34801561046f57600080fd5b5061022961047e366004611f2c565b6073602052600090815260409020546001600160a01b031681565b3480156104a557600080fd5b506104b96104b4366004611f2c565b610be4565b60405161023d9190612133565b3480156104d257600080fd5b506104b9610c26565b3480156104e757600080fd5b5061028a610cb4565b3480156104fc57600080fd5b5061028a61050b366004611f2c565b610d9e565b34801561051c57600080fd5b5061028a61052b366004611f5c565b610e2e565b34801561053c57600080fd5b5061028a61054b366004611ecc565b610f1d565b34801561055c57600080fd5b5061025c606c5481565b34801561057257600080fd5b5061028a610581366004611f2c565b610fc3565b34801561059257600080fd5b5061028a611010565b3480156105a757600080fd5b5061025c60685481565b3480156105bd57600080fd5b5061028a6105cc366004611e1d565b6110a9565b3480156105dd57600080fd5b5061028a6105ec366004611e1d565b61111b565b3480156105fd57600080fd5b5061028a61060c366004611e1d565b6111d1565b34801561061d57600080fd5b5061025c60695481565b6033546001600160a01b031633146106745760405162461bcd60e51b8152602060048201819052602482015260008051602061232b83398151915260448201526064015b60405180910390fd5b8060695414156106b85760405162461bcd60e51b815260206004820152600f60248201526e4e6f207072696365206368616e676560881b604482015260640161066b565b606955565b6106c7828261128a565b6106d182826117b6565b5050565b6033546001600160a01b0316331461071d5760405162461bcd60e51b8152602060048201819052602482015260008051602061232b833981519152604482015260640161066b565b607160405161072c9190612044565b60405180910390208282604051610744929190612034565b6040518091039020141561079a5760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f742073657420746f2073616d6520666f6c64657220757269000000604482015260640161066b565b6107a660718383611d3d565b505050565b6033546001600160a01b031633146107f35760405162461bcd60e51b8152602060048201819052602482015260008051602061232b833981519152604482015260640161066b565b6065546001600160a01b038281169116141561083c5760405162461bcd60e51b815260206004820152600860248201526729b0b6b290343ab160c11b604482015260640161066b565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146108a65760405162461bcd60e51b8152602060048201819052602482015260008051602061232b833981519152604482015260640161066b565b6070548114156108f85760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742073657420746f207468652073616d6520696e64657800000000604482015260640161066b565b607055565b6033546001600160a01b031633146109455760405162461bcd60e51b8152602060048201819052602482015260008051602061232b833981519152604482015260640161066b565b61094f60006117f5565b565b6033546001600160a01b031633146109995760405162461bcd60e51b8152602060048201819052602482015260008051602061232b833981519152604482015260640161066b565b8060725414156109dd5760405162461bcd60e51b815260206004820152600f60248201526e4e6f207374617465206368616e676560881b604482015260640161066b565b607255565b6033546001600160a01b03163314610a2a5760405162461bcd60e51b8152602060048201819052602482015260008051602061232b833981519152604482015260640161066b565b806068541415610a6d5760405162461bcd60e51b815260206004820152600e60248201526d14d85b59481c185c995b9d081a5960921b604482015260640161066b565b606855565b6033546001600160a01b03163314610aba5760405162461bcd60e51b8152602060048201819052602482015260008051602061232b833981519152604482015260640161066b565b606554606854604051636304aecb60e01b815260048101919091526000916001600160a01b031690636304aecb9060240160206040518083038186803b158015610b0357600080fd5b505afa158015610b17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3b9190611e40565b9050806001600160a01b03166323b872dd30610b5f6033546001600160a01b031690565b6068546040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015610bc957600080fd5b505af1158015610bdd573d6000803e3d6000fd5b5050505050565b60606071610bfe83607054610bf991906121f1565b611847565b604051602001610c0f9291906120b3565b60405160208183030381529060405290505b919050565b60718054610c339061227f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5f9061227f565b8015610cac5780601f10610c8157610100808354040283529160200191610cac565b820191906000526020600020905b815481529060010190602001808311610c8f57829003601f168201915b505050505081565b6033546001600160a01b03163314610cfc5760405162461bcd60e51b8152602060048201819052602482015260008051602061232b833981519152604482015260640161066b565b606d5460ff1615610d4f5760405162461bcd60e51b815260206004820152601460248201527f53616c6520616c72656164792073746172746564000000000000000000000000604482015260640161066b565b606d805460ff1916600117905543606e8190556040517fa78c547613f6306e7a70d1bd161c18a496cae1eeb8d4f9e58b60d69ad72ddf5891610d949190815260200190565b60405180910390a1565b6033546001600160a01b03163314610de65760405162461bcd60e51b8152602060048201819052602482015260008051602061232b833981519152604482015260640161066b565b806067541415610e295760405162461bcd60e51b815260206004820152600e60248201526d14d85b59481c185c995b9d081a5960921b604482015260640161066b565b606755565b600054610100900460ff1680610e47575060005460ff16155b610e635760405162461bcd60e51b815260040161066b90612146565b600054610100900460ff16158015610e85576000805461ffff19166101011790555b610e8d611982565b60688b905560698a9055606580546001600160a01b03808c166001600160a01b031992831617909255606a8054928b16929091169190911790556070869055610ed860718686611d3d565b506072879055606b839055606680546001600160a01b0319166001600160a01b0384161790558015610f10576000805461ff00191690555b5050505050505050505050565b6033546001600160a01b03163314610f655760405162461bcd60e51b8152602060048201819052602482015260008051602061232b833981519152604482015260640161066b565b606f5460ff1615158115151415610fb05760405162461bcd60e51b815260206004820152600f60248201526e4e6f207374617465206368616e676560881b604482015260640161066b565b606f805460ff1916911515919091179055565b6033546001600160a01b0316331461100b5760405162461bcd60e51b8152602060048201819052602482015260008051602061232b833981519152604482015260640161066b565b606b55565b6033546001600160a01b031633146110585760405162461bcd60e51b8152602060048201819052602482015260008051602061232b833981519152604482015260640161066b565b606d5460ff1661109d5760405162461bcd60e51b815260206004820152601060248201526f14d85b19481b9bdd081cdd185c9d195960821b604482015260640161066b565b606d805460ff19169055565b6066546001600160a01b03828116911614156110f95760405162461bcd60e51b815260206004820152600f60248201526e4e6f207374617465206368616e676560881b604482015260640161066b565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146111635760405162461bcd60e51b8152602060048201819052602482015260008051602061232b833981519152604482015260640161066b565b606a546001600160a01b03828116911614156111af5760405162461bcd60e51b815260206004820152600b60248201526a14d85b594815d85b1b195d60aa1b604482015260640161066b565b606a80546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146112195760405162461bcd60e51b8152602060048201819052602482015260008051602061232b833981519152604482015260640161066b565b6001600160a01b03811661127e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161066b565b611287816117f5565b50565b806112d75760405162461bcd60e51b815260206004820152601360248201527f5a65726f20707572636861736520636f756e7400000000000000000000000000604482015260640161066b565b606b54606c541061132a5760405162461bcd60e51b815260206004820152601960248201527f4e6f20646f6d61696e73206c65667420666f7220636c61696d00000000000000604482015260640161066b565b60695461133890829061221d565b3410156113875760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f7567682066756e647320696e20707572636861736500000000604482015260640161066b565b606f5460ff16156113c35760405162461bcd60e51b81526020600482015260066024820152651c185d5cd95960d21b604482015260640161066b565b606d5460ff166114155760405162461bcd60e51b815260206004820181905260248201527f53616c65206861736e27742073746172746564206f722068617320656e646564604482015260640161066b565b607254606e5461142591906121f1565b4311156114655760405162461bcd60e51b815260206004820152600e60248201526d14d85b19481a185cc8195b99195960921b604482015260640161066b565b60005b818110156107a657600060738185858581811061149557634e487b7160e01b600052603260045260246000fd5b60209081029290920135835250810191909152604001600020546001600160a01b0316146115055760405162461bcd60e51b815260206004820152601360248201527f4e465420616c726561647920636c61696d656400000000000000000000000000604482015260640161066b565b6065546000906001600160a01b0316636304aecb85858581811061153957634e487b7160e01b600052603260045260246000fd5b905060200201356040518263ffffffff1660e01b815260040161155e91815260200190565b60206040518083038186803b15801561157657600080fd5b505afa15801561158a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ae9190611e40565b60655490915033906001600160a01b0316636352211e8686868181106115e457634e487b7160e01b600052603260045260246000fd5b905060200201356040518263ffffffff1660e01b815260040161160991815260200190565b60206040518083038186803b15801561162157600080fd5b505afa158015611635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116599190611e40565b6001600160a01b0316146116af5760405162461bcd60e51b815260206004820152601960248201527f436c61696d696e67207769746820756e6f776e6564204e465400000000000000604482015260640161066b565b606754816001600160a01b031663cfa3c1328686868181106116e157634e487b7160e01b600052603260045260246000fd5b905060200201356040518263ffffffff1660e01b815260040161170691815260200190565b60206040518083038186803b15801561171e57600080fd5b505afa158015611732573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117569190611f44565b146117a35760405162461bcd60e51b815260206004820152601c60248201527f436c61696d696e67207769746820696e656c696769626c65204e465400000000604482015260640161066b565b50806117ae816122ba565b915050611468565b60006117c1826119fd565b90506000816069546117d3919061221d565b905080156117e4576117e481611a4a565b6117ef828585611b1f565b50505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60608161186c57506040805180820190915260018152600360fc1b6020820152610c21565b8160005b81156118965780611880816122ba565b915061188f9050600a83612209565b9150611870565b60008167ffffffffffffffff8111156118bf57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156118e9576020820181803683370190505b5090505b841561197a576118fe60018361223c565b915061190b600a866122d5565b6119169060306121f1565b60f81b81838151811061193957634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611973600a86612209565b94506118ed565b949350505050565b600054610100900460ff168061199b575060005460ff16155b6119b75760405162461bcd60e51b815260040161066b90612146565b600054610100900460ff161580156119d9576000805461ffff19166101011790555b6119e1611c73565b6119e9611cdd565b8015611287576000805461ff001916905550565b606b54606c546000918391611a139083906121f1565b1115611a2c57606c54606b54611a29919061223c565b90505b80606c6000828254611a3e91906121f1565b90915550909392505050565b606a546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611a84573d6000803e3d6000fd5b506000611a91823461223c565b111561128757336108fc611aa5833461223c565b6040518115909202916000818181858888f19350505050158015611acd573d6000803e3d6000fd5b507f5e90a7af0e257106295d4cabfe31a7f0bc7100b422f59e277d09b25932f9aa7433611afa833461223c565b604080516001600160a01b03909316835260208301919091520160405180910390a150565b60005b838110156117ef5760008185606c54607054611b3e91906121f1565b611b48919061223c565b611b5291906121f1565b6066546068549192506001600160a01b0316906334038d4890611b7484611847565b606a546001600160a01b0316611b8986610be4565b60006001336040518863ffffffff1660e01b8152600401611bb09796959493929190612194565b602060405180830381600087803b158015611bca57600080fd5b505af1158015611bde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c029190611f44565b503360736000868686818110611c2857634e487b7160e01b600052603260045260246000fd5b90506020020135815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505080611c6c906122ba565b9050611b22565b600054610100900460ff1680611c8c575060005460ff16155b611ca85760405162461bcd60e51b815260040161066b90612146565b600054610100900460ff161580156119e9576000805461ffff19166101011790558015611287576000805461ff001916905550565b600054610100900460ff1680611cf6575060005460ff16155b611d125760405162461bcd60e51b815260040161066b90612146565b600054610100900460ff16158015611d34576000805461ffff19166101011790555b6119e9336117f5565b828054611d499061227f565b90600052602060002090601f016020900481019282611d6b5760008555611db1565b82601f10611d845782800160ff19823516178555611db1565b82800160010185558215611db1579182015b82811115611db1578235825591602001919060010190611d96565b50611dbd929150611dc1565b5090565b5b80821115611dbd5760008155600101611dc2565b60008083601f840112611de7578182fd5b50813567ffffffffffffffff811115611dfe578182fd5b602083019150836020828501011115611e1657600080fd5b9250929050565b600060208284031215611e2e578081fd5b8135611e3981612315565b9392505050565b600060208284031215611e51578081fd5b8151611e3981612315565b60008060208385031215611e6e578081fd5b823567ffffffffffffffff80821115611e85578283fd5b818501915085601f830112611e98578283fd5b813581811115611ea6578384fd5b8660208260051b8501011115611eba578384fd5b60209290920196919550909350505050565b600060208284031215611edd578081fd5b81358015158114611e39578182fd5b60008060208385031215611efe578182fd5b823567ffffffffffffffff811115611f14578283fd5b611f2085828601611dd6565b90969095509350505050565b600060208284031215611f3d578081fd5b5035919050565b600060208284031215611f55578081fd5b5051919050565b6000806000806000806000806000806101208b8d031215611f7b578586fd5b8a35995060208b0135985060408b0135611f9481612315565b975060608b0135611fa481612315565b965060808b0135955060a08b0135945060c08b013567ffffffffffffffff811115611fcd578485fd5b611fd98d828e01611dd6565b90955093505060e08b013591506101008b0135611ff581612315565b809150509295989b9194979a5092959850565b60008151808452612020816020860160208601612253565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b60008083546120528161227f565b6001828116801561206a576001811461207b576120a7565b60ff198416875282870194506120a7565b8786526020808720875b8581101561209e5781548a820152908401908201612085565b50505082870194505b50929695505050505050565b60008084546120c18161227f565b600182811680156120d957600181146120ea57612116565b60ff19841687528287019450612116565b8886526020808720875b8581101561210d5781548a8201529084019082016120f4565b50505082870194505b50505050835161212a818360208801612253565b01949350505050565b600060208252611e396020830184612008565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600088825260e060208301526121ad60e0830189612008565b6001600160a01b03808916604085015283820360608501526121cf8289612008565b608085019790975294151560a08401525050911660c090910152949350505050565b60008219821115612204576122046122e9565b500190565b600082612218576122186122ff565b500490565b6000816000190483118215151615612237576122376122e9565b500290565b60008282101561224e5761224e6122e9565b500390565b60005b8381101561226e578181015183820152602001612256565b838111156117ef5750506000910152565b600181811c9082168061229357607f821691505b602082108114156122b457634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156122ce576122ce6122e9565b5060010190565b6000826122e4576122e46122ff565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461128757600080fdfe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220b6effa9f5ffc2f68ee32bdf1fbcfebf939c69ed8905c04a2d3724e126543105a64736f6c63430008030033";

export class ClaimWithChildSale__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClaimWithChildSale> {
    return super.deploy(overrides || {}) as Promise<ClaimWithChildSale>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ClaimWithChildSale {
    return super.attach(address) as ClaimWithChildSale;
  }
  connect(signer: Signer): ClaimWithChildSale__factory {
    return super.connect(signer) as ClaimWithChildSale__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimWithChildSaleInterface {
    return new utils.Interface(_abi) as ClaimWithChildSaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClaimWithChildSale {
    return new Contract(address, _abi, signerOrProvider) as ClaimWithChildSale;
  }
}
